{"ast":null,"code":"import{createContext,useContext,useEffect,useState}from\"react\";import axios from\"axios\";import{axiosReq,axiosRes}from\"../api/axiosDefaults\";import{useHistory}from\"react-router\";import{removeTokenTimestamp,shouldRefreshToken}from\"../utils/utils\";import{jsx as _jsx}from\"react/jsx-runtime\";export const CurrentUserContext=/*#__PURE__*/createContext();export const SetCurrentUserContext=/*#__PURE__*/createContext();export const useCurrentUser=()=>useContext(CurrentUserContext);export const useSetCurrentUser=()=>useContext(SetCurrentUserContext);export const CurrentUserProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);// Loading state\nconst history=useHistory();const fetchCurrentUser=async()=>{try{const{data}=await axiosRes.get(\"dj-rest-auth/user/\");setCurrentUser(data);}catch(err){console.error(\"Failed to fetch current user:\",err);setCurrentUser(null);// Optionally set to null if there's an error\n}finally{setLoading(false);// End loading state\n}};useEffect(()=>{fetchCurrentUser();},[]);const handleTokenRefresh=async config=>{try{await axios.post(\"/dj-rest-auth/token/refresh/\");}catch(err){setCurrentUser(prevCurrentUser=>{if(prevCurrentUser){history.push(\"/signin\");}return null;});removeTokenTimestamp();}return config;};useEffect(()=>{const requestInterceptor=axiosReq.interceptors.request.use(async config=>{if(shouldRefreshToken()){await handleTokenRefresh(config);}return config;},err=>Promise.reject(err));const responseInterceptor=axiosRes.interceptors.response.use(response=>response,async err=>{var _err$response;if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){await handleTokenRefresh(err.config);return axios(err.config);}return Promise.reject(err);});// Cleanup interceptors on unmount\nreturn()=>{axiosReq.interceptors.request.eject(requestInterceptor);axiosRes.interceptors.response.eject(responseInterceptor);};},[history]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// Optional loading indicator\nreturn/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsx(SetCurrentUserContext.Provider,{value:setCurrentUser,children:children})});};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","axiosReq","axiosRes","useHistory","removeTokenTimestamp","shouldRefreshToken","jsx","_jsx","CurrentUserContext","SetCurrentUserContext","useCurrentUser","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","history","fetchCurrentUser","data","get","err","console","error","handleTokenRefresh","config","post","prevCurrentUser","push","requestInterceptor","interceptors","request","use","Promise","reject","responseInterceptor","response","_err$response","status","eject","Provider","value"],"sources":["/workspace/frontend-project5/src/contexts/CurrentUserContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const history = useHistory();\n\n  const fetchCurrentUser = async () => {\n    try {\n      const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(\"Failed to fetch current user:\", err);\n      setCurrentUser(null); // Optionally set to null if there's an error\n    } finally {\n      setLoading(false); // End loading state\n    }\n  };\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  const handleTokenRefresh = async (config) => {\n    try {\n      await axios.post(\"/dj-rest-auth/token/refresh/\");\n    } catch (err) {\n      setCurrentUser((prevCurrentUser) => {\n        if (prevCurrentUser) {\n          history.push(\"/signin\");\n        }\n        return null;\n      });\n      removeTokenTimestamp();\n    }\n    return config;\n  };\n\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          await handleTokenRefresh(config);\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          await handleTokenRefresh(err.config);\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n\n    // Cleanup interceptors on unmount\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n\n  if (loading) return <p>Loading...</p>; // Optional loading indicator\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}