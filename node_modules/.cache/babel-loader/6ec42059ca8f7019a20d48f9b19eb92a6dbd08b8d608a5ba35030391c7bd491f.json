{"ast":null,"code":"import axios from \"axios\";\n\n// ✅ Set up the base URL (Use environment variable if available)\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || \"https://joshapp-backend-efcd8c73d793.herokuapp.com/\";\naxios.defaults.withCredentials = true; // ✅ Ensures cookies are sent/received\n\n// ✅ Default headers for JSON requests\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// ✅ Create an Axios instance for requests\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // ✅ Use this only when uploading images/files\n  }\n});\n\n// ✅ Create an Axios instance for responses\nconst axiosRes = axios.create();\n\n// ✅ Interceptor to handle token refresh\naxiosRes.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn(\"Unauthorized - Attempting token refresh\");\n    try {\n      // ✅ Attempt to refresh JWT token\n      await axios.post(\"dj-rest-auth/token/refresh/\", {}, {\n        withCredentials: true\n      });\n\n      // ✅ Retry the original request after refreshing\n      return axios(error.config);\n    } catch (refreshError) {\n      console.error(\"Refresh token failed - Redirecting to login\");\n      // Optionally: Redirect user to login page\n    }\n  }\n\n  return Promise.reject(error);\n});\n\n// ✅ Export both Axios instances for use in your frontend\nexport { axiosReq, axiosRes };","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API_BASE_URL","withCredentials","headers","post","axiosReq","create","axiosRes","interceptors","response","use","error","_error$response","status","console","warn","config","refreshError","Promise","reject"],"sources":["/workspace/frontend-project5/src/api/axiosDefaults.js"],"sourcesContent":["import axios from \"axios\";\n\n// ✅ Set up the base URL (Use environment variable if available)\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || \"https://joshapp-backend-efcd8c73d793.herokuapp.com/\";\naxios.defaults.withCredentials = true; // ✅ Ensures cookies are sent/received\n\n// ✅ Default headers for JSON requests\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// ✅ Create an Axios instance for requests\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\", // ✅ Use this only when uploading images/files\n  },\n});\n\n// ✅ Create an Axios instance for responses\nconst axiosRes = axios.create();\n\n// ✅ Interceptor to handle token refresh\naxiosRes.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response?.status === 401) {\n      console.warn(\"Unauthorized - Attempting token refresh\");\n\n      try {\n        // ✅ Attempt to refresh JWT token\n        await axios.post(\"dj-rest-auth/token/refresh/\", {}, { withCredentials: true });\n\n        // ✅ Retry the original request after refreshing\n        return axios(error.config);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed - Redirecting to login\");\n        // Optionally: Redirect user to login page\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// ✅ Export both Axios instances for use in your frontend\nexport { axiosReq, axiosRes };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,qDAAqD;AACpHL,KAAK,CAACC,QAAQ,CAACK,eAAe,GAAG,IAAI,CAAC,CAAC;;AAEvC;AACAN,KAAK,CAACC,QAAQ,CAACM,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;;AAEhE;AACA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAAC;EAC5BH,OAAO,EAAE;IACP,cAAc,EAAE,qBAAqB,CAAE;EACzC;AACF,CAAC,CAAC;;AAEF;AACA,MAAMI,QAAQ,GAAGX,KAAK,CAACU,MAAM,EAAE;;AAE/B;AACAC,QAAQ,CAACC,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCC,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;IAEvD,IAAI;MACF;MACA,MAAMnB,KAAK,CAACQ,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC,EAAE;QAAEF,eAAe,EAAE;MAAK,CAAC,CAAC;;MAE9E;MACA,OAAON,KAAK,CAACe,KAAK,CAACK,MAAM,CAAC;IAC5B,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBH,OAAO,CAACH,KAAK,CAAC,6CAA6C,CAAC;MAC5D;IACF;EACF;;EAEA,OAAOO,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CAAC,CACF;;AAED;AACA,SAASN,QAAQ,EAAEE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}