{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || \"https://joshapp-backend-efcd8c73d793.herokuapp.com/\";\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n});\nconst axiosRes = axios.create();\naxiosRes.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn(\"Unauthorized - Attempting token refresh\");\n    try {\n      await axios.post(\"dj-rest-auth/token/refresh/\", {}, {\n        withCredentials: true\n      });\n      return axios(error.config);\n    } catch (refreshError) {\n      console.error(\"Refresh token failed - Redirecting to login\");\n    }\n  }\n  return Promise.reject(error);\n});\nexport { axiosReq, axiosRes };","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API_BASE_URL","withCredentials","headers","post","axiosReq","create","axiosRes","interceptors","response","use","error","_error$response","status","console","warn","config","refreshError","Promise","reject"],"sources":["/workspace/frontend-project5/src/api/axiosDefaults.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || \"https://joshapp-backend-efcd8c73d793.herokuapp.com/\";\naxios.defaults.withCredentials = true;\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n  },\n});\n\n\nconst axiosRes = axios.create();\n\n\naxiosRes.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response?.status === 401) {\n      console.warn(\"Unauthorized - Attempting token refresh\");\n\n      try {\n        await axios.post(\"dj-rest-auth/token/refresh/\", {}, { withCredentials: true });\n        return axios(error.config);\n      } catch (refreshError) {\n        console.error(\"Refresh token failed - Redirecting to login\");\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport { axiosReq, axiosRes };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,qDAAqD;AACpHL,KAAK,CAACC,QAAQ,CAACK,eAAe,GAAG,IAAI;AAErCN,KAAK,CAACC,QAAQ,CAACM,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAEhE,MAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAAC;EAC5BH,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGF,MAAMI,QAAQ,GAAGX,KAAK,CAACU,MAAM,EAAE;AAG/BC,QAAQ,CAACC,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCC,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;IAEvD,IAAI;MACF,MAAMnB,KAAK,CAACQ,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC,EAAE;QAAEF,eAAe,EAAE;MAAK,CAAC,CAAC;MAC9E,OAAON,KAAK,CAACe,KAAK,CAACK,MAAM,CAAC;IAC5B,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBH,OAAO,CAACH,KAAK,CAAC,6CAA6C,CAAC;IAC9D;EACF;EAEA,OAAOO,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,SAASN,QAAQ,EAAEE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}