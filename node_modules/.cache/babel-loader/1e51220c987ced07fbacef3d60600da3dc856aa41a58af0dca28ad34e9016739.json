{"ast":null,"code":"import axios from \"axios\";\n\n// Set up the base URL and default headers\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || 'https://joshapp-backend-efcd8c73d793.herokuapp.com/';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\n// Create an Axios instance for requests\nconst axiosReq = axios.create();\n\n// Add a request interceptor\naxiosReq.interceptors.request.use(config => {\n  // You can add authentication tokens or any other modifications here\n  return config;\n}, error => {\n  // Handle request errors here\n  return Promise.reject(error);\n});\n\n// Create an Axios instance for responses\nconst axiosRes = axios.create();\n\n// Add a response interceptor\naxiosRes.interceptors.response.use(response => {\n  // Return the response data directly\n  return response.data;\n}, error => {\n  // Handle common response errors here\n  if (error.response) {\n    if (error.response.status === 401) {\n      // Handle unauthorized error (e.g., redirect to login)\n      console.error(\"Unauthorized access - Redirecting to login\");\n    } else {\n      console.error(\"An error occurred:\", error.response.status, error.response.data);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Export both Axios instances for use in your application\nexport { axiosReq, axiosRes };","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API_BASE_URL","headers","post","withCredentials","axiosReq","create","interceptors","request","use","config","error","Promise","reject","axiosRes","response","data","status","console"],"sources":["/workspace/frontend-project5/src/api/axiosDefaults.js"],"sourcesContent":["import axios from \"axios\";\n\n// Set up the base URL and default headers\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL || 'https://joshapp-backend-efcd8c73d793.herokuapp.com/';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\n// Create an Axios instance for requests\nconst axiosReq = axios.create();\n\n// Add a request interceptor\naxiosReq.interceptors.request.use(\n  (config) => {\n    // You can add authentication tokens or any other modifications here\n    return config;\n  },\n  (error) => {\n    // Handle request errors here\n    return Promise.reject(error);\n  }\n);\n\n// Create an Axios instance for responses\nconst axiosRes = axios.create();\n\n// Add a response interceptor\naxiosRes.interceptors.response.use(\n  (response) => {\n    // Return the response data directly\n    return response.data;\n  },\n  (error) => {\n    // Handle common response errors here\n    if (error.response) {\n      if (error.response.status === 401) {\n        // Handle unauthorized error (e.g., redirect to login)\n        console.error(\"Unauthorized access - Redirecting to login\");\n      } else {\n        console.error(\"An error occurred:\", error.response.status, error.response.data);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Export both Axios instances for use in your application\nexport { axiosReq, axiosRes };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,qDAAqD;AACpHL,KAAK,CAACC,QAAQ,CAACK,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,qBAAqB;AACnEP,KAAK,CAACC,QAAQ,CAACO,eAAe,GAAG,IAAI;;AAErC;AACA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAM,EAAE;;AAE/B;AACAD,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;;AAED;AACA,MAAMG,QAAQ,GAAGlB,KAAK,CAACU,MAAM,EAAE;;AAE/B;AACAQ,QAAQ,CAACP,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC/BM,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAL,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB,IAAIJ,KAAK,CAACI,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACjC;MACAC,OAAO,CAACP,KAAK,CAAC,4CAA4C,CAAC;IAC7D,CAAC,MAAM;MACLO,OAAO,CAACP,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACI,QAAQ,CAACE,MAAM,EAAEN,KAAK,CAACI,QAAQ,CAACC,IAAI,CAAC;IACjF;EACF;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACF;;AAED;AACA,SAASN,QAAQ,EAAES,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}