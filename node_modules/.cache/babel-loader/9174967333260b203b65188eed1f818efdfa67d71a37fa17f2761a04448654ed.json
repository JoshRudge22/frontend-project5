{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"https://joshapp-backend-efcd8c73d793.herokuapp.com\";\naxios.defaults.withCredentials = true; // Allows sending cookies with requests\n\n// Axios instance for requests\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n});\n\n// Axios instance for responses (handling token refresh)\nconst axiosRes = axios.create();\n\n// Response Interceptor for handling expired tokens\naxiosRes.interceptors.response.use(response => response,\n// Return successful response as is\nasync error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Handle 401 Unauthorized errors (token expired)\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    console.warn(\"Unauthorized - Attempting token refresh\");\n    originalRequest._retry = true; // Prevent infinite loops\n\n    try {\n      const refreshResponse = await axios.post(\"/dj-rest-auth/token/refresh/\", {}, {\n        withCredentials: true\n      } // Ensure cookies are sent\n      );\n\n      if (refreshResponse.data.access) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${refreshResponse.data.access}`;\n        originalRequest.headers[\"Authorization\"] = `Bearer ${refreshResponse.data.access}`;\n        return axios(originalRequest); // Retry original request\n      }\n    } catch (refreshError) {\n      console.error(\"Refresh token failed - Redirecting to login\");\n      window.location.href = \"/signin\"; // Redirect user to login page\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport { axiosReq, axiosRes };","map":{"version":3,"names":["axios","defaults","baseURL","withCredentials","axiosReq","create","headers","axiosRes","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","console","warn","refreshResponse","post","data","access","common","refreshError","window","location","href","Promise","reject"],"sources":["/workspace/frontend-project5/src/api/axiosDefaults.js"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://joshapp-backend-efcd8c73d793.herokuapp.com\";\naxios.defaults.withCredentials = true; // Allows sending cookies with requests\n\n// Axios instance for requests\nconst axiosReq = axios.create({\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n  },\n});\n\n// Axios instance for responses (handling token refresh)\nconst axiosRes = axios.create();\n\n// Response Interceptor for handling expired tokens\naxiosRes.interceptors.response.use(\n  (response) => response, // Return successful response as is\n  async (error) => {\n    const originalRequest = error.config;\n\n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      console.warn(\"Unauthorized - Attempting token refresh\");\n\n      originalRequest._retry = true; // Prevent infinite loops\n\n      try {\n        const refreshResponse = await axios.post(\n          \"/dj-rest-auth/token/refresh/\", \n          {}, \n          { withCredentials: true } // Ensure cookies are sent\n        );\n\n        if (refreshResponse.data.access) {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${refreshResponse.data.access}`;\n          originalRequest.headers[\"Authorization\"] = `Bearer ${refreshResponse.data.access}`;\n\n          return axios(originalRequest); // Retry original request\n        }\n      } catch (refreshError) {\n        console.error(\"Refresh token failed - Redirecting to login\");\n        window.location.href = \"/signin\"; // Redirect user to login page\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport { axiosReq, axiosRes };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,oDAAoD;AAC7EF,KAAK,CAACC,QAAQ,CAACE,eAAe,GAAG,IAAI,CAAC,CAAC;;AAEvC;AACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC5BC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAGP,KAAK,CAACK,MAAM,EAAE;;AAE/B;AACAE,QAAQ,CAACC,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,IAAKA,QAAQ;AAAE;AACxB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAM;;EAEpC;EACA,IAAI,EAAAF,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC7DC,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;IAEvDL,eAAe,CAACG,MAAM,GAAG,IAAI,CAAC,CAAC;;IAE/B,IAAI;MACF,MAAMG,eAAe,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CACtC,8BAA8B,EAC9B,CAAC,CAAC,EACF;QAAEjB,eAAe,EAAE;MAAK,CAAC,CAAC;MAAA,CAC3B;;MAED,IAAIgB,eAAe,CAACE,IAAI,CAACC,MAAM,EAAE;QAC/BtB,KAAK,CAACC,QAAQ,CAACK,OAAO,CAACiB,MAAM,CAAC,eAAe,CAAC,GAAI,UAASJ,eAAe,CAACE,IAAI,CAACC,MAAO,EAAC;QACxFT,eAAe,CAACP,OAAO,CAAC,eAAe,CAAC,GAAI,UAASa,eAAe,CAACE,IAAI,CAACC,MAAO,EAAC;QAElF,OAAOtB,KAAK,CAACa,eAAe,CAAC,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOW,YAAY,EAAE;MACrBP,OAAO,CAACN,KAAK,CAAC,6CAA6C,CAAC;MAC5Dc,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS,CAAC,CAAC;IACpC;EACF;;EAEA,OAAOC,OAAO,CAACC,MAAM,CAAClB,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,SAASP,QAAQ,EAAEG,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}