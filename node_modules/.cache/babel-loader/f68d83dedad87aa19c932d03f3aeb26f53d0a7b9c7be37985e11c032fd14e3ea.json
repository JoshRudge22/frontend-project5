{"ast":null,"code":"var _jsxFileName = \"/workspace/frontend-project5/src/contexts/CurrentUserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext();\nexport const SetCurrentUserContext = /*#__PURE__*/createContext();\nexport const useCurrentUser = () => {\n  _s();\n  return useContext(CurrentUserContext);\n};\n_s(useCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useSetCurrentUser = () => {\n  _s2();\n  return useContext(SetCurrentUserContext);\n};\n_s2(useSetCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CurrentUserProvider = _ref => {\n  _s3();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const history = useHistory();\n  const fetchCurrentUser = async () => {\n    try {\n      const {\n        data\n      } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(\"Failed to fetch current user:\", err);\n      setCurrentUser(null); // Optionally set to null if there's an error\n    } finally {\n      setLoading(false); // End loading state\n    }\n  };\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n  const handleTokenRefresh = async config => {\n    try {\n      await axios.post(\"/dj-rest-auth/token/refresh/\");\n    } catch (err) {\n      setCurrentUser(prevCurrentUser => {\n        if (prevCurrentUser) {\n          history.push(\"/signin\");\n        }\n        return null;\n      });\n      removeTokenTimestamp();\n    }\n    return config;\n  };\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(async config => {\n      if (shouldRefreshToken()) {\n        await handleTokenRefresh(config);\n      }\n      return config;\n    }, err => Promise.reject(err));\n    const responseInterceptor = axiosRes.interceptors.response.use(response => response, async err => {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        await handleTokenRefresh(err.config);\n        return axios(err.config);\n      }\n      return Promise.reject(err);\n    });\n\n    // Cleanup interceptors on unmount\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 23\n  }, this); // Optional loading indicator\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(SetCurrentUserContext.Provider, {\n      value: setCurrentUser,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s3(CurrentUserProvider, \"1feF931wCO22izfzgUm2jjhOXtE=\", false, function () {\n  return [useHistory];\n});\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","axiosReq","axiosRes","useHistory","removeTokenTimestamp","shouldRefreshToken","jsxDEV","_jsxDEV","CurrentUserContext","SetCurrentUserContext","useCurrentUser","_s","useSetCurrentUser","_s2","CurrentUserProvider","_ref","_s3","children","currentUser","setCurrentUser","loading","setLoading","history","fetchCurrentUser","data","get","err","console","error","handleTokenRefresh","config","post","prevCurrentUser","push","requestInterceptor","interceptors","request","use","Promise","reject","responseInterceptor","response","_err$response","status","eject","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/workspace/frontend-project5/src/contexts/CurrentUserContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const history = useHistory();\n\n  const fetchCurrentUser = async () => {\n    try {\n      const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(\"Failed to fetch current user:\", err);\n      setCurrentUser(null); // Optionally set to null if there's an error\n    } finally {\n      setLoading(false); // End loading state\n    }\n  };\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  const handleTokenRefresh = async (config) => {\n    try {\n      await axios.post(\"/dj-rest-auth/token/refresh/\");\n    } catch (err) {\n      setCurrentUser((prevCurrentUser) => {\n        if (prevCurrentUser) {\n          history.push(\"/signin\");\n        }\n        return null;\n      });\n      removeTokenTimestamp();\n    }\n    return config;\n  };\n\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          await handleTokenRefresh(config);\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          await handleTokenRefresh(err.config);\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n\n    // Cleanup interceptors on unmount\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n\n  if (loading) return <p>Loading...</p>; // Optional loading indicator\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}